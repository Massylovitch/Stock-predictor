name: Deploy REST API to Production
run-name: Deployment run - ${{ github.actor }}
on:
  repository_dispatch:
    types: [webhook_Production]
  
  workflow_dispatch:

env:
    PYTHON_VERSION: 3.9
    POETRY_VERSION: 1.5.1
    POETRY_URL: https://install.python-poetry.org
      
jobs:    
    deploy-rest-api-prod:
        runs-on: ubuntu-latest
        steps:

            - name: Checkout
              uses: actions/checkout@v3
        
            # Poetry cache depends on OS, Python version and Poetry version.
            - name: Cache Poetry cache
              uses: actions/cache@v3
        
              with:
                path: ~/.cache/pypoetry
                key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
            
            # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
            - name: Cache Packages
              uses: actions/cache@v3
              with:
                path: ~/.local
                key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
            
            - name: Set up Python ${{ env.PYTHON_VERSION }}
              uses: actions/setup-python@v3
              with:
                python-version: ${{ env.PYTHON_VERSION }}
            
            - name: Install Poetry
              run: |
                curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
                echo "$HOME/.local/bin" >> $GITHUB_PATH
            
            - name: Install Dependencies
              run: poetry install --no-root
            
            - name: Deploy endpoint to Cerebrium
              env: 
                COMET_ML_API_KEY: ${{ secrets.COMET_ML_API_KEY }}
                COMET_ML_WORKSPACE: ${{ secrets.COMET_ML_WORKSPACE }}
                COMET_ML_MODEL_NAME: ${{ secrets.COMET_ML_MODEL_NAME }}
                CEREBRIUM_API_KEY: ${{ secrets.CEREBRIUM_API_KEY }}
              run: make deploy